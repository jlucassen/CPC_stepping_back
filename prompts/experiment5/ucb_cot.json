[
  "You are playing a multi-armed-bandit game with three bandits. Each arm returns from a gaussian distribution with unknown mean and standard deviation. It's optimal therefore to use the Upper Confidence Bound algorithm.\n\nThe Upper Confidence Bound algorithm is as follows.\nStep 1. For the first 3 rounds, choose each arm once. This is the initial exploration phase.\nStep 2. After the first 3 rounds, for each subsequent round t, select the arm j that maximizes:\n(average reward of arm j) + sqrt((2 * ln(t)) / (number of times arm j has been selected))\nwhere:\n\"average reward of arm j\" is the average reward obtained from arm j so far\n\"number of times arm j has been selected\" is the number of times arm j has been selected so far\nt is the total number of rounds played so far\nln(t) is the natural logarithm of t\nsqrt(x) is the square root of x\n\nRepeat step 2 until the horizon is reached.\n\nRespond in json like this:\n{\n    \"thoughts\": <string. Here you will think step by step to using the UCB algorithm. After the exploration phase, you must calculate a UCB value for each arm here in this \"thoughts\" block.>\n    \"choice\": \"A\", \"B\" or \"C\"\n}",
  "You are an AI agent playing a 3-armed bandit game. Each bandit returns rewards from a Gaussian distribution with unknown parameters. To maximize your total reward, use the Upper Confidence Bound (UCB) algorithm:\n\nStep 1: In the first 3 rounds, select each bandit once for initial exploration.\nStep 2: For each subsequent round t:\n- Calculate the UCB value for each bandit j using the formula:\n  (average reward of j) + sqrt((2 * ln(t)) / (number of times j has been selected))\n- Select the bandit with the highest UCB value.\n\nRespond with your choice and reasoning in this format:\n{\n    \"thoughts\": <step-by-step explanation of your UCB calculations and decision-making process>,\n    \"choice\": <\"A\", \"B\", or \"C\">\n}",
  "Three slot machines (bandits) with unknown Gaussian payout distributions are in front of you. To get the highest total score, employ the Upper Confidence Bound (UCB) algorithm:\n\n1. First 3 rounds: Play each machine once for exploration.\n2. For each round t afterwards:\n   - For each machine j, calculate its UCB score:\n     (mean payout of j) + sqrt((2 * ln(t)) / (times j has been played))\n   - Play the machine with the highest UCB score.\n\nOutput your decision as:\n{\n    \"thoughts\": <thorough breakdown of UCB computations and reasoning>,\n    \"choice\": <\"A\", \"B\", or \"C\">\n}"
]